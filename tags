!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ABS	OneTime/NanoparticleDistances.c	8;"	d	file:
Aggregate	Structs.h	/^      *Aggregate, \/\/\/< index numbers of aggregates corresponding to Aggregate struct (-1 for bead in no aggregate)$/;"	m	struct:Bead
Aggregate	Structs.h	/^      Aggregate; \/\/\/< id of aggregate molecule is in (corresponding to index in Aggregate struct)$/;"	m	struct:Molecule
Aggregate	Structs.h	/^typedef struct Aggregate {$/;"	s
Aggregate	Structs.h	/^} Aggregate; \/\/}}}$/;"	t	typeref:struct:Aggregate
Aggregates	Structs.h	/^      Aggregates; \/\/\/< total number of aggregates$/;"	m	struct:Counts
BType	Structs.h	/^      *BType; \/\/\/< ids of bead types in every molecule of given type (corresponds to indices in BeadType struct)$/;"	m	struct:MoleculeType
Bead	Structs.h	/^      *Bead, \/\/\/< ids of beads in the molecule$/;"	m	struct:Molecule
Bead	Structs.h	/^      *Bead, \/\/\/< ids of bonded beads in aggregate$/;"	m	struct:Aggregate
Bead	Structs.h	/^typedef struct Bead {$/;"	s
Bead	Structs.h	/^} Bead; \/\/}}}$/;"	t	typeref:struct:Bead
BeadType	Structs.h	/^typedef struct BeadType {$/;"	s
BeadType	Structs.h	/^} BeadType; \/\/}}}$/;"	t	typeref:struct:BeadType
BeadTypeOption	Options.c	/^bool BeadTypeOption(int argc, char **argv, Counts Counts,$/;"	f
BeadsInVsf	Structs.h	/^      BeadsInVsf, \/\/\/< total number of all beads in .vsf file (not necessarily in .vcf)$/;"	m	struct:Counts
Bond	Structs.h	/^      **Bond, \/\/\/< pair of ids for every bond (with relative bead numbers from 0 to nBeads)$/;"	m	struct:MoleculeType
Bonded	Structs.h	/^      Bonded, \/\/\/< total number of beads in all molecules$/;"	m	struct:Counts
BondsFileOption	Options.c	/^bool BondsFileOption(int argc, char **argv, char **bonds_file) {$/;"	f
BoolOption	Options.c	/^bool BoolOption(int argc, char **argv, char *opt) {$/;"	f
CUBE	Structs.h	12;"	d
CalculateAggregates	Common/Aggregates-NotSameBeads.c	/^void CalculateAggregates(Aggregate **Aggregate, Counts *Counts, int sqdist, int contacts,$/;"	f
CalculateAggregates	Common/Aggregates.c	/^void CalculateAggregates(Aggregate **Aggregate, Counts *Counts, int sqdist, int contacts,$/;"	f
CentreOfMass	AnalysisTools.c	/^Vector CentreOfMass(int n, int *list, Bead *Bead, BeadType *BeadType) {$/;"	f
Charge	Structs.h	/^  double Charge, \/\/\/< charge of every bead of given type$/;"	m	struct:BeadType
CommonHelp	AnalysisTools.c	/^void CommonHelp(bool error) {$/;"	f
CommonOptions	AnalysisTools.c	/^bool CommonOptions(int argc, char **argv, char **vsf_file,char **bonds_file,$/;"	f
Counts	Structs.h	/^typedef struct Counts {$/;"	s
Counts	Structs.h	/^} Counts; \/\/}}}$/;"	t	typeref:struct:Counts
Distance	AnalysisTools.c	/^Vector Distance(Vector id1, Vector id2, Vector BoxLength) {$/;"	f
ErrorHelp	Common/Aggregates-NotSameBeads.c	/^void ErrorHelp(char cmd[50]) { \/\/{{{$/;"	f
ErrorHelp	Common/Aggregates.c	/^void ErrorHelp(char cmd[50]) { \/\/{{{$/;"	f
ErrorHelp	Common/Average.c	/^void ErrorHelp(char cmd[50]) { \/\/{{{$/;"	f
ErrorHelp	Common/BondLength.c	/^void ErrorHelp(char cmd[50]) { \/\/{{{$/;"	f
ErrorHelp	Common/Config.c	/^void ErrorHelp(char cmd[50]) { \/\/{{{$/;"	f
ErrorHelp	Common/DensityAggregates.c	/^void ErrorHelp(char cmd[50]) { \/\/{{{$/;"	f
ErrorHelp	Common/DensityMolecules.c	/^void ErrorHelp(char cmd[50]) { \/\/{{{$/;"	f
ErrorHelp	Common/DistrAgg.c	/^void ErrorHelp(char cmd[50]) { \/\/{{{$/;"	f
ErrorHelp	Common/GyrationAggregates.c	/^void ErrorHelp(char cmd[50]) { \/\/{{{$/;"	f
ErrorHelp	Common/GyrationMolecules.c	/^void ErrorHelp(char cmd[50]) { \/\/{{{$/;"	f
ErrorHelp	Common/JoinAggregates.c	/^void ErrorHelp(char cmd[50]) { \/\/{{{$/;"	f
ErrorHelp	Common/JoinRuns.c	/^void ErrorHelp(char cmd[50]) { \/\/{{{$/;"	f
ErrorHelp	Common/PairCorrel.c	/^void ErrorHelp(char cmd[50]) { \/\/{{{$/;"	f
ErrorHelp	Common/PairCorrelPerAgg.c	/^void ErrorHelp(char cmd[50]) { \/\/{{{$/;"	f
ErrorHelp	Common/SelectedVcf.c	/^void ErrorHelp(char cmd[50]) { \/\/{{{$/;"	f
ErrorHelp	Common/TransformVsf.c	/^void ErrorHelp(char cmd[50]) { \/\/{{{$/;"	f
ErrorHelp	Linear/EndToEnd.c	/^void ErrorHelp(char cmd[50]) { \/\/{{{$/;"	f
ErrorHelp	Linear/PersistenceLength.c	/^void ErrorHelp(char cmd[50]) { \/\/{{{$/;"	f
ErrorHelp	OneTime/AggDensity-CICheck.c	/^void ErrorHelp(char cmd[50]) { \/\/{{{$/;"	f
ErrorHelp	OneTime/ChargeRatio.c	/^void ErrorHelp(char cmd[50]) { \/\/{{{$/;"	f
ErrorHelp	OneTime/DensityAggregates-NotHomop.c	/^void ErrorHelp(char cmd[50]) { \/\/{{{$/;"	f
ErrorHelp	OneTime/DensityMolecules-NearNanoSurf.c	/^void ErrorHelp(char cmd[50]) { \/\/{{{$/;"	f
ErrorHelp	OneTime/DistrAgg2D.c	/^void ErrorHelp(char cmd[50]) { \/\/{{{$/;"	f
ErrorHelp	OneTime/NanoparticleDistances.c	/^void ErrorHelp(char cmd[50]) { \/\/{{{$/;"	f
ErrorHelp	OneTime/PairCorrel-Fluor.c	/^void ErrorHelp(char cmd[50]) { \/\/{{{$/;"	f
ExcludeOption	Options.c	/^bool ExcludeOption(int argc, char **argv, Counts Counts,$/;"	f
FileOption	Options.c	/^bool FileOption(int argc, char **argv, char *opt, char **name) {$/;"	f
FindBeadType	AnalysisTools.c	/^int FindBeadType(char *name, Counts Counts, BeadType *BeadType) {$/;"	f
FindMoleculeType	AnalysisTools.c	/^int FindMoleculeType(char *name, Counts Counts, MoleculeType *MoleculeType) {$/;"	f
FreeAggregate	AnalysisTools.c	/^void FreeAggregate(Counts Counts, Aggregate **Aggregate) {$/;"	f
FreeBead	AnalysisTools.c	/^void FreeBead(Counts Counts, Bead **Bead) {$/;"	f
FreeMolecule	AnalysisTools.c	/^void FreeMolecule(Counts Counts, Molecule **Molecule) {$/;"	f
FreeMoleculeType	AnalysisTools.c	/^void FreeMoleculeType(Counts Counts, MoleculeType **MoleculeType) {$/;"	f
Gyration	AnalysisTools.c	/^Vector Gyration(int n, int *list, Counts Counts, Vector BoxLength, BeadType *BeadType, Bead **Bead) {$/;"	f
Index	Structs.h	/^      Index; \/\/\/< index of the bead according to .vsf file (needed for indexed timesteps)$/;"	m	struct:Bead
IntVector	Structs.h	/^typedef struct IntVector {$/;"	s
IntVector	Structs.h	/^} IntVector; \/\/}}}$/;"	t	typeref:struct:IntVector
IntegerOption	Options.c	/^bool IntegerOption(int argc, char **argv, char *opt, int *value) {$/;"	f
JoinCoorOption	Options.c	/^bool JoinCoorOption(int argc, char **argv, char *joined_vcf) {$/;"	f
LongVector	Structs.h	/^typedef struct LongVector {$/;"	s
LongVector	Structs.h	/^} LongVector; \/\/}}}$/;"	t	typeref:struct:LongVector
Mass	Structs.h	/^         Mass; \/\/\/< mass of every bead of given type$/;"	m	struct:BeadType
Mass	Structs.h	/^  double Mass; \/\/\/< total mass of every molecule of given type$/;"	m	struct:MoleculeType
Mass	Structs.h	/^  double Mass; \/\/\/< total mass of the aggregate$/;"	m	struct:Aggregate
Min3	AnalysisTools.c	/^double Min3(double x, double y, double z) {$/;"	f
Molecule	Structs.h	/^      *Molecule, \/\/\/< ids of molecules in aggregate$/;"	m	struct:Aggregate
Molecule	Structs.h	/^      Molecule, \/\/\/< index number of molecule corresponding to Molecule struct (-1 for monomeric bead)$/;"	m	struct:Bead
Molecule	Structs.h	/^typedef struct Molecule {$/;"	s
Molecule	Structs.h	/^} Molecule; \/\/}}}$/;"	t	typeref:struct:Molecule
MoleculeType	Structs.h	/^typedef struct MoleculeType {$/;"	s
MoleculeType	Structs.h	/^} MoleculeType; \/\/}}}$/;"	t	typeref:struct:MoleculeType
MoleculeTypeOption	Options.c	/^bool MoleculeTypeOption(int argc, char **argv, char *opt, int *moltype, Counts$/;"	f
MoleculeTypeOption2	Options.c	/^bool MoleculeTypeOption2(int argc, char **argv, char *opt, int **moltype, Counts$/;"	f
Molecules	Structs.h	/^      Molecules, \/\/\/< total number of molecules$/;"	m	struct:Counts
Monomer	Structs.h	/^      *Monomer; \/\/\/< ids of monomeric beads in aggregate$/;"	m	struct:Aggregate
MoveCOMMolecules	AnalysisTools.c	/^void MoveCOMMolecules(Counts Counts, Vector BoxLength,$/;"	f
Name	Structs.h	/^  char Name[16]; \/\/\/< name of given bead type$/;"	m	struct:BeadType
Name	Structs.h	/^  char Name[16]; \/\/\/< name of given molecule type$/;"	m	struct:MoleculeType
Number	Structs.h	/^  int Number, \/\/\/< number of molecules of given type$/;"	m	struct:MoleculeType
Number	Structs.h	/^  int Number; \/\/\/< number of beads of given type$/;"	m	struct:BeadType
PI	Structs.h	9;"	d
Position	Structs.h	/^  Vector Position; \/\/\/< cartesian coordinates of the bead$/;"	m	struct:Bead
ReadAggregates	AnalysisTools.c	/^void ReadAggregates(FILE *agg_file, Counts *Counts, Aggregate **Aggregate,$/;"	f
ReadCoorIndexed	AnalysisTools.c	/^int ReadCoorIndexed(FILE *vcf_file, Counts Counts, Bead **Bead, char **stuff) {$/;"	f
ReadCoorOrdered	AnalysisTools.c	/^int ReadCoorOrdered(FILE *vcf_file, Counts Counts, Bead **Bead, char **stuff) {$/;"	f
ReadFIELD	AnalysisTools.c	/^bool ReadFIELD(char *bonds_file, char *vcf_file, Counts *Counts,$/;"	f
ReadStructure	AnalysisTools.c	/^bool ReadStructure(char *vsf_file, char *vcf_file, char *bonds_file, Counts *Counts,$/;"	f
ReadVsf	AnalysisTools.c	/^void ReadVsf(char *vsf_file, Counts *Counts, BeadType *BeadType, Bead **Bead) {$/;"	f
RemovePBCAggregates	AnalysisTools.c	/^void RemovePBCAggregates(double distance, Aggregate *Aggregate, Counts Counts,$/;"	f
RemovePBCMolecules	AnalysisTools.c	/^void RemovePBCMolecules(Counts Counts, Vector BoxLength,$/;"	f
RestorePBC	AnalysisTools.c	/^void RestorePBC(Counts Counts, Vector BoxLength, Bead **Bead) {$/;"	f
SQR	Structs.h	11;"	d
SilentOption	Options.c	/^void SilentOption(int argc, char **argv, bool *verbose, bool *verbose2,$/;"	f
SkipCoor	AnalysisTools.c	/^int SkipCoor(FILE *vcf_file, Counts Counts, char **stuff) {$/;"	f
Sort3	AnalysisTools.c	/^Vector Sort3(Vector in) {$/;"	f
TwoIntegerOption	Options.c	/^bool TwoIntegerOption(int argc, char **argv, char *opt, int *values) {$/;"	f
Type	Structs.h	/^  int Type, \/\/\/< type of bead corresponding to index in BeadType struct$/;"	m	struct:Bead
Type	Structs.h	/^  int Type, \/\/\/< type of molecule corresponding to index in MoleculeType struct$/;"	m	struct:Molecule
TypesOfBeads	Structs.h	/^  int TypesOfBeads, \/\/\/< number of bead types$/;"	m	struct:Counts
TypesOfMolecules	Structs.h	/^      TypesOfMolecules, \/\/\/< number of molecule types$/;"	m	struct:Counts
Unbonded	Structs.h	/^      Unbonded, \/\/\/< total number of monomeric beads$/;"	m	struct:Counts
Use	Structs.h	/^  bool Use, \/\/\/< should bead type in .vcf file be used for calculation?$/;"	m	struct:BeadType
Use	Structs.h	/^  bool Use, \/\/\/< should molecule type be used for calculation?$/;"	m	struct:MoleculeType
Use	Structs.h	/^  bool Use; \/\/\/< should aggregate be used for calculation?$/;"	m	struct:Aggregate
Vector	Structs.h	/^typedef struct Vector {$/;"	s
Vector	Structs.h	/^} Vector; \/\/}}}$/;"	t	typeref:struct:Vector
VerboseLongOption	Options.c	/^void VerboseLongOption(int argc, char **argv, bool *verbose, bool *verbose2) {$/;"	f
VerboseOutput	AnalysisTools.c	/^void VerboseOutput(bool Verbose2, char *input_vcf, char *bonds_file, Counts Counts,$/;"	f
VsfFileOption	Options.c	/^bool VsfFileOption(int argc, char **argv, char **vsf_file) {$/;"	f
Write	Structs.h	/^       Write; \/\/\/< should bead type in .vcf file be written to output .vcf?$/;"	m	struct:BeadType
Write	Structs.h	/^       Write; \/\/\/< should molecule type be used for calculation?$/;"	m	struct:MoleculeType
WriteCoorIndexed	AnalysisTools.c	/^void WriteCoorIndexed(FILE *vcf_file, Counts Counts,$/;"	f
WriteVsf	Common/TransformVsf.c	/^void WriteVsf(char *vsf_file, Counts Counts, BeadType *BeadType, Bead *Bead,$/;"	f
_AGGREGATES_H_	Common/Aggregates.h	2;"	d
_ANALYSISTOOLS_H_	AnalysisTools.h	7;"	d
_OPTIONS_H_	Options.h	7;"	d
_STRUCTS_H_	Structs.h	7;"	d
amass	Common/traject-v2_5.f90	/^      REAL(KIND=dp), ALLOCATABLE :: xxx (:), yyy (:), zzz (:), amass /;"	v	program:traject
amass	Common/traject-v2_6.f90	/^      REAL(KIND=dp) :: volm, dimx, dimy, dimz, halfx, halfy, halfz, shrdx, shrdy, shrdz, amass$/;"	v	program:traject
bbb	Common/traject-v2_5.f90	/^      REAL(KIND=dp), ALLOCATABLE :: xxx (:), yyy (:), zzz (:), amass (:), bbb /;"	v	program:traject
bbb	Common/traject-v2_6.f90	/^      REAL(KIND=dp), ALLOCATABLE :: bbb /;"	v	program:traject
beads	Common/traject-v2_5.f90	/^      INTEGER, ALLOCATABLE :: ltp (:), ltm (:), mole (:), bndtbl (:,:), beads /;"	v	program:traject
beads	Common/traject-v2_6.f90	/^      INTEGER, ALLOCATABLE :: ltp (:), ltm (:), mole (:), bndtbl (:,:), beads /;"	v	program:traject
bigend	Common/traject-v2_5.f90	/^      LOGICAL :: volchange, eof, bigend$/;"	v	program:traject
bndtbl	Common/traject-v2_5.f90	/^      INTEGER, ALLOCATABLE :: ltp (:), ltm (:), mole (:), bndtbl /;"	v	program:traject
bndtbl	Common/traject-v2_6.f90	/^      INTEGER, ALLOCATABLE :: ltp (:), ltm (:), mole (:), bndtbl /;"	v	program:traject
bonds	Common/traject-v2_5.f90	/^      INTEGER, ALLOCATABLE :: ltp (:), ltm (:), mole (:), bndtbl (:,:), beads (:), bonds /;"	v	program:traject
bonds	Common/traject-v2_6.f90	/^      INTEGER, ALLOCATABLE :: ltp (:), ltm (:), mole (:), bndtbl (:,:), beads (:), bonds /;"	v	program:traject
chain	Common/traject-v2_5.f90	/^      INTEGER :: chain,/;"	v	program:traject
chain	Common/traject-v2_6.f90	/^      INTEGER :: chain,/;"	v	program:traject
chan	Common/traject-v2_5.f90	/^      CHARACTER(4) :: chan$/;"	v	program:traject
chan	Common/traject-v2_6.f90	/^      CHARACTER(6) :: chan$/;"	v	program:traject
dimx	Common/traject-v2_5.f90	/^      REAL(KIND=dp) :: volm, dimx,/;"	v	program:traject
dimx	Common/traject-v2_6.f90	/^      REAL(KIND=dp) :: volm, dimx,/;"	v	program:traject
dimy	Common/traject-v2_5.f90	/^      REAL(KIND=dp) :: volm, dimx, dimy,/;"	v	program:traject
dimy	Common/traject-v2_6.f90	/^      REAL(KIND=dp) :: volm, dimx, dimy,/;"	v	program:traject
dimz	Common/traject-v2_5.f90	/^      REAL(KIND=dp) :: volm, dimx, dimy, dimz,/;"	v	program:traject
dimz	Common/traject-v2_6.f90	/^      REAL(KIND=dp) :: volm, dimx, dimy, dimz,/;"	v	program:traject
dp	Common/traject-v2_5.f90	/^      INTEGER, PARAMETER :: dp /;"	v	program:traject
dp	Common/traject-v2_6.f90	/^      INTEGER, PARAMETER :: dp /;"	v	program:traject
eof	Common/traject-v2_5.f90	/^      LOGICAL :: volchange, eof,/;"	v	program:traject
eof	Common/traject-v2_6.f90	/^      LOGICAL :: volchange, eof,/;"	v	program:traject
first	Common/traject-v2_5.f90	/^      INTEGER :: chain, ispe, imol, ibond, imxspe, ioerror, i, numtraj, itime, j, k, first,/;"	v	program:traject
fx	Common/traject-v2_6.f90	/^      REAL(KIND=dp) :: ndx, ndy, ndz, time, mbeads, mglobal, x, y, z, vx, vy, vz, fx,/;"	v	program:traject
fy	Common/traject-v2_6.f90	/^      REAL(KIND=dp) :: ndx, ndy, ndz, time, mbeads, mglobal, x, y, z, vx, vy, vz, fx, fy,/;"	v	program:traject
fz	Common/traject-v2_6.f90	/^      REAL(KIND=dp) :: ndx, ndy, ndz, time, mbeads, mglobal, x, y, z, vx, vy, vz, fx, fy, fz$/;"	v	program:traject
global	Common/traject-v2_5.f90	/^      INTEGER :: maxnum, numspe, numnodes, nbeads, nubeads, numbeads, nbonds, numbonds, global,/;"	v	program:traject
global	Common/traject-v2_6.f90	/^      INTEGER :: maxnum, numspe, numnodes, nbeads, nubeads, numbeads, nbonds, numbonds, global,/;"	v	program:traject
halfx	Common/traject-v2_6.f90	/^      REAL(KIND=dp) :: volm, dimx, dimy, dimz, halfx,/;"	v	program:traject
halfy	Common/traject-v2_6.f90	/^      REAL(KIND=dp) :: volm, dimx, dimy, dimz, halfx, halfy,/;"	v	program:traject
halfz	Common/traject-v2_6.f90	/^      REAL(KIND=dp) :: volm, dimx, dimy, dimz, halfx, halfy, halfz,/;"	v	program:traject
i	Common/traject-v2_5.f90	/^      INTEGER :: chain/;"	v	program:traject
i	Common/traject-v2_6.f90	/^      INTEGER :: chain/;"	v	program:traject
ibond	Common/traject-v2_5.f90	/^      INTEGER :: chain, ispe, imol, ibond,/;"	v	program:traject
ibond	Common/traject-v2_6.f90	/^      INTEGER :: chain, ibond,/;"	v	program:traject
imol	Common/traject-v2_5.f90	/^      INTEGER :: chain, ispe, imol,/;"	v	program:traject
imxspe	Common/traject-v2_5.f90	/^      INTEGER :: chain, ispe, imol, ibond, imxspe,/;"	v	program:traject
imxspe	Common/traject-v2_6.f90	/^      INTEGER :: chain, ibond, imxspe,/;"	v	program:traject
ioerror	Common/traject-v2_5.f90	/^      INTEGER :: chain, ispe, imol, ibond, imxspe, ioerror,/;"	v	program:traject
ioerror	Common/traject-v2_6.f90	/^      INTEGER :: chain, ibond, imxspe, ioerror,/;"	v	program:traject
ispe	Common/traject-v2_5.f90	/^      INTEGER :: chain, ispe,/;"	v	program:traject
itime	Common/traject-v2_5.f90	/^      INTEGER :: chain, ispe, imol, ibond, imxspe, ioerror, i, numtraj, itime,/;"	v	program:traject
j	Common/traject-v2_5.f90	/^      INTEGER :: chain, ispe, imol, ibond, imxspe, ioerror, i, numtraj,/;"	v	program:traject
j	Common/traject-v2_6.f90	/^      INTEGER :: chain, ibond, imxspe, ioerror, i, j,/;"	v	program:traject
k	Common/traject-v2_5.f90	/^      INTEGER :: chain, ispe, imol, ibond, imxspe, ioerror, i, numtraj, itime, j, k,/;"	v	program:traject
k	Common/traject-v2_6.f90	/^      INTEGER :: chain, ibond, imxspe, ioerror, i, j, k,/;"	v	program:traject
keytrj	Common/traject-v2_6.f90	/^      INTEGER :: lfrzn, keytrj,/;"	v	program:traject
last	Common/traject-v2_5.f90	/^      INTEGER :: chain, ispe, imol, ibond, imxspe, ioerror, i, numtraj, itime, j, k, first, last,/;"	v	program:traject
lfrzn	Common/traject-v2_5.f90	/^      INTEGER :: steps, lfrzn$/;"	v	program:traject
lfrzn	Common/traject-v2_6.f90	/^      INTEGER :: lfrzn,/;"	v	program:traject
ltm	Common/traject-v2_5.f90	/^      INTEGER, ALLOCATABLE :: ltp (:), ltm /;"	v	program:traject
ltm	Common/traject-v2_6.f90	/^      INTEGER, ALLOCATABLE :: ltp (:), ltm /;"	v	program:traject
ltp	Common/traject-v2_5.f90	/^      INTEGER, ALLOCATABLE :: ltp /;"	v	program:traject
ltp	Common/traject-v2_6.f90	/^      INTEGER, ALLOCATABLE :: ltp /;"	v	program:traject
main	Common/Aggregates-NotSameBeads.c	/^int main(int argc, char *argv[]) {$/;"	f
main	Common/Aggregates.c	/^int main(int argc, char *argv[]) {$/;"	f
main	Common/Average.c	/^int main ( int argc, char** argv ) {$/;"	f
main	Common/BondLength.c	/^int main(int argc, char *argv[]) {$/;"	f
main	Common/Config.c	/^int main(int argc, char *argv[]) {$/;"	f
main	Common/DensityAggregates.c	/^int main(int argc, char *argv[]) {$/;"	f
main	Common/DensityMolecules.c	/^int main(int argc, char *argv[]) {$/;"	f
main	Common/DistrAgg.c	/^int main(int argc, char *argv[]) {$/;"	f
main	Common/GyrationAggregates.c	/^int main(int argc, char *argv[]) {$/;"	f
main	Common/GyrationMolecules.c	/^int main(int argc, char *argv[]) {$/;"	f
main	Common/JoinAggregates.c	/^int main(int argc, char *argv[]) {$/;"	f
main	Common/JoinRuns.c	/^int main(int argc, char *argv[]) {$/;"	f
main	Common/PairCorrel.c	/^int main(int argc, char *argv[]) {$/;"	f
main	Common/PairCorrelPerAgg.c	/^int main(int argc, char *argv[]) {$/;"	f
main	Common/SelectedVcf.c	/^int main(int argc, char *argv[]) {$/;"	f
main	Common/TransformVsf.c	/^int main(int argc, char *argv[]) {$/;"	f
main	Linear/EndToEnd.c	/^int main(int argc, char *argv[]) {$/;"	f
main	Linear/PersistenceLength.c	/^int main(int argc, char *argv[]) {$/;"	f
main	OneTime/AggDensity-CICheck.c	/^int main(int argc, char *argv[]) {$/;"	f
main	OneTime/ChargeRatio.c	/^int main(int argc, char *argv[]) {$/;"	f
main	OneTime/DensityAggregates-NotHomop.c	/^int main(int argc, char *argv[]) {$/;"	f
main	OneTime/DensityMolecules-NearNanoSurf.c	/^int main(int argc, char *argv[]) {$/;"	f
main	OneTime/DistrAgg2D.c	/^int main(int argc, char *argv[]) {$/;"	f
main	OneTime/NanoparticleDistances.c	/^int main(int argc, char *argv[]) {$/;"	f
main	OneTime/PairCorrel-Fluor.c	/^int main(int argc, char *argv[]) {$/;"	f
maxnum	Common/traject-v2_5.f90	/^      INTEGER :: maxnum,/;"	v	program:traject
maxnum	Common/traject-v2_6.f90	/^      INTEGER :: maxnum,/;"	v	program:traject
mbeads	Common/traject-v2_5.f90	/^      REAL(KIND=dp) :: volm, dimx, dimy, dimz, ndx, ndy, ndz, time, mbeads,/;"	v	program:traject
mbeads	Common/traject-v2_6.f90	/^      REAL(KIND=dp) :: ndx, ndy, ndz, time, mbeads,/;"	v	program:traject
mglobal	Common/traject-v2_5.f90	/^      REAL(KIND=dp) :: volm, dimx, dimy, dimz, ndx, ndy, ndz, time, mbeads, mglobal,/;"	v	program:traject
mglobal	Common/traject-v2_6.f90	/^      REAL(KIND=dp) :: ndx, ndy, ndz, time, mbeads, mglobal,/;"	v	program:traject
mole	Common/traject-v2_5.f90	/^      INTEGER, ALLOCATABLE :: ltp (:), ltm (:), mole /;"	v	program:traject
mole	Common/traject-v2_6.f90	/^      INTEGER, ALLOCATABLE :: ltp (:), ltm (:), mole /;"	v	program:traject
molecule	Common/traject-v2_5.f90	/^      INTEGER :: maxnum, numspe, numnodes, nbeads, nubeads, numbeads, nbonds, numbonds, global, species, molecule$/;"	v	program:traject
molecule	Common/traject-v2_6.f90	/^      INTEGER :: maxnum, numspe, numnodes, nbeads, nubeads, numbeads, nbonds, numbonds, global, species, molecule$/;"	v	program:traject
nAggregates	Structs.h	/^      nAggregates, \/\/\/< number of aggregates the bead is in (only monomeric beads can be in more aggregates - allocated memory for 10)$/;"	m	struct:Bead
nBTypes	Structs.h	/^      nBTypes, \/\/\/< number of bead types in every molecule of given type$/;"	m	struct:MoleculeType
nBeads	Structs.h	/^      nBeads, \/\/\/< number of beads in every molecule of given type$/;"	m	struct:MoleculeType
nBeads	Structs.h	/^      nBeads, \/\/\/< number of bonded beads in aggregate$/;"	m	struct:Aggregate
nBonds	Structs.h	/^      nBonds, \/\/\/< number of bonds in every molecule of given type$/;"	m	struct:MoleculeType
nMolecules	Structs.h	/^  int nMolecules, \/\/\/< number of molecules in aggregate$/;"	m	struct:Aggregate
nMonomers	Structs.h	/^      nMonomers, \/\/\/< number of monomeric beads in aggregate$/;"	m	struct:Aggregate
name1	Common/traject-v2_5.f90	/^      CHARACTER(8) :: name1$/;"	v	program:traject
name1	Common/traject-v2_6.f90	/^      CHARACTER(8) :: name1,/;"	v	program:traject
nammol	Common/traject-v2_5.f90	/^      CHARACTER(8), ALLOCATABLE :: namspe (:), nammol /;"	v	program:traject
nammol	Common/traject-v2_6.f90	/^      CHARACTER(8) :: name1, nammol$/;"	v	program:traject
namspe	Common/traject-v2_5.f90	/^      CHARACTER(8), ALLOCATABLE :: namspe /;"	v	program:traject
namspe	Common/traject-v2_6.f90	/^      CHARACTER(8), ALLOCATABLE :: namspe /;"	v	program:traject
nbeads	Common/traject-v2_5.f90	/^      INTEGER :: maxnum, numspe, numnodes, nbeads,/;"	v	program:traject
nbeads	Common/traject-v2_6.f90	/^      INTEGER :: maxnum, numspe, numnodes, nbeads,/;"	v	program:traject
nbonds	Common/traject-v2_5.f90	/^      INTEGER :: maxnum, numspe, numnodes, nbeads, nubeads, numbeads, nbonds,/;"	v	program:traject
nbonds	Common/traject-v2_6.f90	/^      INTEGER :: maxnum, numspe, numnodes, nbeads, nubeads, numbeads, nbonds,/;"	v	program:traject
ndx	Common/traject-v2_5.f90	/^      REAL(KIND=dp) :: volm, dimx, dimy, dimz, ndx,/;"	v	program:traject
ndx	Common/traject-v2_6.f90	/^      REAL(KIND=dp) :: ndx,/;"	v	program:traject
ndy	Common/traject-v2_5.f90	/^      REAL(KIND=dp) :: volm, dimx, dimy, dimz, ndx, ndy,/;"	v	program:traject
ndy	Common/traject-v2_6.f90	/^      REAL(KIND=dp) :: ndx, ndy,/;"	v	program:traject
ndz	Common/traject-v2_5.f90	/^      REAL(KIND=dp) :: volm, dimx, dimy, dimz, ndx, ndy, ndz,/;"	v	program:traject
ndz	Common/traject-v2_6.f90	/^      REAL(KIND=dp) :: ndx, ndy, ndz,/;"	v	program:traject
nmoldef	Common/traject-v2_5.f90	/^      INTEGER :: chain, ispe, imol, ibond, imxspe, ioerror, i, numtraj, itime, j, k, first, last, nmoldef$/;"	v	program:traject
nmoldef	Common/traject-v2_6.f90	/^      INTEGER :: chain, ibond, imxspe, ioerror, i, j, k, nmoldef$/;"	v	program:traject
nrtout	Common/traject-v2_5.f90	/^      INTEGER, PARAMETER :: nuser=5,nrtout=/;"	v	program:traject
nrtout	Common/traject-v2_6.f90	/^      INTEGER, PARAMETER :: nuser=5,nrtout=/;"	v	program:traject
nspe	Common/traject-v2_5.f90	/^      INTEGER, ALLOCATABLE :: ltp (:), ltm (:), mole (:), bndtbl (:,:), beads (:), bonds (:), nspe /;"	v	program:traject
nspe	Common/traject-v2_6.f90	/^      INTEGER, ALLOCATABLE :: ltp (:), ltm (:), mole (:), bndtbl (:,:), beads (:), bonds (:), nspe /;"	v	program:traject
ntraj	Common/traject-v2_5.f90	/^      INTEGER, PARAMETER :: nuser=5,nrtout=9,ntraj=/;"	v	program:traject
ntraj	Common/traject-v2_6.f90	/^      INTEGER, PARAMETER :: nuser=5,nrtout=9,ntraj=/;"	v	program:traject
nubeads	Common/traject-v2_5.f90	/^      INTEGER :: maxnum, numspe, numnodes, nbeads, nubeads,/;"	v	program:traject
nubeads	Common/traject-v2_6.f90	/^      INTEGER :: maxnum, numspe, numnodes, nbeads, nubeads,/;"	v	program:traject
numbeads	Common/traject-v2_5.f90	/^      INTEGER :: maxnum, numspe, numnodes, nbeads, nubeads, numbeads,/;"	v	program:traject
numbeads	Common/traject-v2_6.f90	/^      INTEGER :: maxnum, numspe, numnodes, nbeads, nubeads, numbeads,/;"	v	program:traject
numbonds	Common/traject-v2_5.f90	/^      INTEGER :: maxnum, numspe, numnodes, nbeads, nubeads, numbeads, nbonds, numbonds,/;"	v	program:traject
numbonds	Common/traject-v2_6.f90	/^      INTEGER :: maxnum, numspe, numnodes, nbeads, nubeads, numbeads, nbonds, numbonds,/;"	v	program:traject
numnodes	Common/traject-v2_5.f90	/^      INTEGER :: maxnum, numspe, numnodes,/;"	v	program:traject
numnodes	Common/traject-v2_6.f90	/^      INTEGER :: maxnum, numspe, numnodes,/;"	v	program:traject
numspe	Common/traject-v2_5.f90	/^      INTEGER :: maxnum, numspe,/;"	v	program:traject
numspe	Common/traject-v2_6.f90	/^      INTEGER :: maxnum, numspe,/;"	v	program:traject
numtraj	Common/traject-v2_5.f90	/^      INTEGER :: chain, ispe, imol, ibond, imxspe, ioerror, i, numtraj,/;"	v	program:traject
nuser	Common/traject-v2_5.f90	/^      INTEGER, PARAMETER :: nuser=/;"	v	program:traject
nuser	Common/traject-v2_6.f90	/^      INTEGER, PARAMETER :: nuser=/;"	v	program:traject
parseint	Common/traject-v2_5.f90	/^      INTEGER FUNCTION parseint /;"	f	program:traject
parseint	Common/traject-v2_6.f90	/^      INTEGER FUNCTION parseint /;"	f	program:traject
separate	Common/traject-v2_6.f90	/^      LOGICAL :: volchange, eof, separate$/;"	v	program:traject
shrdx	Common/traject-v2_6.f90	/^      REAL(KIND=dp) :: volm, dimx, dimy, dimz, halfx, halfy, halfz, shrdx,/;"	v	program:traject
shrdy	Common/traject-v2_6.f90	/^      REAL(KIND=dp) :: volm, dimx, dimy, dimz, halfx, halfy, halfz, shrdx, shrdy,/;"	v	program:traject
shrdz	Common/traject-v2_6.f90	/^      REAL(KIND=dp) :: volm, dimx, dimy, dimz, halfx, halfy, halfz, shrdx, shrdy, shrdz,/;"	v	program:traject
species	Common/traject-v2_5.f90	/^      INTEGER :: maxnum, numspe, numnodes, nbeads, nubeads, numbeads, nbonds, numbonds, global, species,/;"	v	program:traject
species	Common/traject-v2_6.f90	/^      INTEGER :: maxnum, numspe, numnodes, nbeads, nubeads, numbeads, nbonds, numbonds, global, species,/;"	v	program:traject
srfx	Common/traject-v2_6.f90	/^      INTEGER :: lfrzn, keytrj, srfx,/;"	v	program:traject
srfy	Common/traject-v2_6.f90	/^      INTEGER :: lfrzn, keytrj, srfx, srfy,/;"	v	program:traject
srfz	Common/traject-v2_6.f90	/^      INTEGER :: lfrzn, keytrj, srfx, srfy, srfz$/;"	v	program:traject
steps	Common/traject-v2_5.f90	/^      INTEGER :: steps,/;"	v	program:traject
text	Common/traject-v2_5.f90	/^      CHARACTER(80) :: text$/;"	v	program:traject
text	Common/traject-v2_6.f90	/^      CHARACTER(80) :: text$/;"	v	program:traject
time	Common/traject-v2_5.f90	/^      REAL(KIND=dp) :: volm, dimx, dimy, dimz, ndx, ndy, ndz, time,/;"	v	program:traject
time	Common/traject-v2_6.f90	/^      REAL(KIND=dp) :: ndx, ndy, ndz, time,/;"	v	program:traject
traject	Common/traject-v2_5.f90	/^PROGRAM traject$/;"	p
traject	Common/traject-v2_6.f90	/^PROGRAM traject$/;"	p
volchange	Common/traject-v2_5.f90	/^      LOGICAL :: volchange,/;"	v	program:traject
volchange	Common/traject-v2_6.f90	/^      LOGICAL :: volchange,/;"	v	program:traject
volm	Common/traject-v2_5.f90	/^      REAL(KIND=dp) :: volm,/;"	v	program:traject
volm	Common/traject-v2_6.f90	/^      REAL(KIND=dp) :: volm,/;"	v	program:traject
vx	Common/traject-v2_5.f90	/^      REAL(KIND=dp) :: volm, dimx, dimy, dimz, ndx, ndy, ndz, time, mbeads, mglobal, x, y, z, vx,/;"	v	program:traject
vx	Common/traject-v2_6.f90	/^      REAL(KIND=dp) :: ndx, ndy, ndz, time, mbeads, mglobal, x, y, z, vx,/;"	v	program:traject
vy	Common/traject-v2_5.f90	/^      REAL(KIND=dp) :: volm, dimx, dimy, dimz, ndx, ndy, ndz, time, mbeads, mglobal, x, y, z, vx, vy,/;"	v	program:traject
vy	Common/traject-v2_6.f90	/^      REAL(KIND=dp) :: ndx, ndy, ndz, time, mbeads, mglobal, x, y, z, vx, vy,/;"	v	program:traject
vz	Common/traject-v2_5.f90	/^      REAL(KIND=dp) :: volm, dimx, dimy, dimz, ndx, ndy, ndz, time, mbeads, mglobal, x, y, z, vx, vy, vz$/;"	v	program:traject
vz	Common/traject-v2_6.f90	/^      REAL(KIND=dp) :: ndx, ndy, ndz, time, mbeads, mglobal, x, y, z, vx, vy, vz,/;"	v	program:traject
x	Common/traject-v2_5.f90	/^      REAL(KIND=dp) :: volm, dimx,/;"	v	program:traject
x	Common/traject-v2_6.f90	/^      REAL(KIND=dp) :: ndx,/;"	v	program:traject
x	Structs.h	/^  double x, y, z;$/;"	m	struct:Vector
x	Structs.h	/^  int x, y, z;$/;"	m	struct:IntVector
x	Structs.h	/^  long double x, y, z;$/;"	m	struct:LongVector
xxx	Common/traject-v2_5.f90	/^      REAL(KIND=dp), ALLOCATABLE :: xxx /;"	v	program:traject
y	Common/traject-v2_5.f90	/^      REAL(KIND=dp) :: volm, dimx, dimy,/;"	v	program:traject
y	Common/traject-v2_6.f90	/^      REAL(KIND=dp) :: ndx, ndy,/;"	v	program:traject
y	Structs.h	/^  double x, y, z;$/;"	m	struct:Vector
y	Structs.h	/^  int x, y, z;$/;"	m	struct:IntVector
y	Structs.h	/^  long double x, y, z;$/;"	m	struct:LongVector
yyy	Common/traject-v2_5.f90	/^      REAL(KIND=dp), ALLOCATABLE :: xxx (:), yyy /;"	v	program:traject
z	Common/traject-v2_5.f90	/^      REAL(KIND=dp) :: volm, dimx, dimy, dimz,/;"	v	program:traject
z	Common/traject-v2_6.f90	/^      REAL(KIND=dp) :: ndx, ndy, ndz,/;"	v	program:traject
z	Structs.h	/^  double x, y, z;$/;"	m	struct:Vector
z	Structs.h	/^  int x, y, z;$/;"	m	struct:IntVector
z	Structs.h	/^  long double x, y, z;$/;"	m	struct:LongVector
zzz	Common/traject-v2_5.f90	/^      REAL(KIND=dp), ALLOCATABLE :: xxx (:), yyy (:), zzz /;"	v	program:traject
